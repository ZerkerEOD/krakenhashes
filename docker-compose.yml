services:
  postgres:
    image: postgres:15-alpine
    container_name: krakenhashes-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ${LOG_DIR:-/var/log/krakenhashes}/postgres:/var/log/postgresql
    environment:
      - POSTGRES_USER=${DB_USER:-krakenhashes}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-krakenhashes}
      - POSTGRES_DB=${DB_NAME:-krakenhashes}
      - PGDATA=/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-krakenhashes}"]
      interval: 5s
      timeout: 5s
      retries: 5
    # restart: unless-stopped  # Disabled for dev - manually start when needed
    networks:
      - krakenhashes-net

  krakenhashes:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: krakenhashes-app
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT:-443}:443"
      - "${KH_HTTPS_PORT:-31337}:31337"
      - "${KH_PORT:-1337}:1337"
    volumes:
      - krakenhashes_data:/var/lib/krakenhashes
      - ${LOG_DIR:-/var/log/krakenhashes}:/var/log/krakenhashes
      - ${KH_CONFIG_DIR_HOST:-/etc/krakenhashes}:/etc/krakenhashes
      - ${KH_DATA_DIR_HOST:-/var/lib/krakenhashes}:/var/lib/krakenhashes
    environment:
      - TZ=UTC
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-krakenhashes}
      - DB_USER=${DB_USER:-krakenhashes}
      - DB_PASSWORD=${DB_PASSWORD:-krakenhashes}
    # restart: unless-stopped  # Disabled for dev - manually start when needed
    networks:
      - krakenhashes-net

networks:
  krakenhashes-net:
    driver: bridge

volumes:
  postgres_data:
    name: krakenhashes_postgres_data
  krakenhashes_data:
    name: krakenhashes_app_data