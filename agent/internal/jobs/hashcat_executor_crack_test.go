package jobs

import (
	"testing"
)

func TestParseCrackedHash(t *testing.T) {
	executor := NewHashcatExecutor("/test/data")

	tests := []struct {
		name            string
		line            string
		hashlistContent []string
		expectedHash    string
		expectedPlain   string
		shouldParse     bool
	}{
		{
			name: "NTLM simple password",
			line: "cb136a448767792bae25563a498a86e6:Admin@1234",
			hashlistContent: []string{
				"cb136a448767792bae25563a498a86e6",
			},
			expectedHash:  "cb136a448767792bae25563a498a86e6",
			expectedPlain: "Admin@1234",
			shouldParse:   true,
		},
		{
			name: "NTLM password with colons",
			line: "cb136a448767792bae25563a498a86e6:Pass:word:123",
			hashlistContent: []string{
				"cb136a448767792bae25563a498a86e6",
			},
			expectedHash:  "cb136a448767792bae25563a498a86e6",
			expectedPlain: "Pass:word:123",
			shouldParse:   true,
		},
		{
			name: "NTLMv2 simple password",
			line: "mkaniski::ADMS:4141414141414141:b0efc25aca7515fb368d99e27f421948:01010000000000000065d955cc20dc014c7f322bafc9ecf300000000010016007300650072007600650072005f006e0061006d006500030016007300650072007600650072005f006e0061006d0065000200120057004f0052004b00470052004f00550050000400120057004f0052004b00470052004f0055005000070008000065d955cc20dc0106000400020000000800300030000000000000000000000000200000cd58466fc1a0dd35950ad17649ab0bf496c8d88b417580e6714a8eb4367b97fa0a0010000000000000000000000000000000000009000c0063006900660073002f0070000000000000000000:password123",
			hashlistContent: []string{
				"mkaniski::ADMS:4141414141414141:b0efc25aca7515fb368d99e27f421948:01010000000000000065d955cc20dc014c7f322bafc9ecf300000000010016007300650072007600650072005f006e0061006d006500030016007300650072007600650072005f006e0061006d0065000200120057004f0052004b00470052004f00550050000400120057004f0052004b00470052004f0055005000070008000065d955cc20dc0106000400020000000800300030000000000000000000000000200000cd58466fc1a0dd35950ad17649ab0bf496c8d88b417580e6714a8eb4367b97fa0a0010000000000000000000000000000000000009000c0063006900660073002f0070000000000000000000",
			},
			expectedHash:  "mkaniski::ADMS:4141414141414141:b0efc25aca7515fb368d99e27f421948:01010000000000000065d955cc20dc014c7f322bafc9ecf300000000010016007300650072007600650072005f006e0061006d006500030016007300650072007600650072005f006e0061006d0065000200120057004f0052004b00470052004f00550050000400120057004f0052004b00470052004f0055005000070008000065d955cc20dc0106000400020000000800300030000000000000000000000000200000cd58466fc1a0dd35950ad17649ab0bf496c8d88b417580e6714a8eb4367b97fa0a0010000000000000000000000000000000000009000c0063006900660073002f0070000000000000000000",
			expectedPlain: "password123",
			shouldParse:   true,
		},
		{
			name: "NTLMv2 password with colons",
			line: "rszymusiak::ADMS:4141414141414141:a8b573451bd789df060b327b22c82a24:010100000000000080ef9a39ef20dc01fe8aa0890a327b7b00000000010016007300650072007600650072005f006e0061006d006500030016007300650072007600650072005f006e0061006d0065000200120057004f0052004b00470052004f00550050000400120057004f0052004b00470052004f00550050000700080080ef9a39ef20dc01060004000200000008003000300000000000000001000000002000008dd8d29853b9bfab04d8bfdab3b6c50be08182787b51e03355cacc7e203035990a0010000000000000000000000000000000000009001a0063006900660073002f004c0055003100320035003500350035000000000000000000:My:Cool:Pass:123",
			hashlistContent: []string{
				"rszymusiak::ADMS:4141414141414141:a8b573451bd789df060b327b22c82a24:010100000000000080ef9a39ef20dc01fe8aa0890a327b7b00000000010016007300650072007600650072005f006e0061006d006500030016007300650072007600650072005f006e0061006d0065000200120057004f0052004b00470052004f00550050000400120057004f0052004b00470052004f00550050000700080080ef9a39ef20dc01060004000200000008003000300000000000000001000000002000008dd8d29853b9bfab04d8bfdab3b6c50be08182787b51e03355cacc7e203035990a0010000000000000000000000000000000000009001a0063006900660073002f004c0055003100320035003500350035000000000000000000",
			},
			expectedHash:  "rszymusiak::ADMS:4141414141414141:a8b573451bd789df060b327b22c82a24:010100000000000080ef9a39ef20dc01fe8aa0890a327b7b00000000010016007300650072007600650072005f006e0061006d006500030016007300650072007600650072005f006e0061006d0065000200120057004f0052004b00470052004f00550050000400120057004f0052004b00470052004f00550050000700080080ef9a39ef20dc01060004000200000008003000300000000000000001000000002000008dd8d29853b9bfab04d8bfdab3b6c50be08182787b51e03355cacc7e203035990a0010000000000000000000000000000000000009001a0063006900660073002f004c0055003100320035003500350035000000000000000000",
			expectedPlain: "My:Cool:Pass:123",
			shouldParse:   true,
		},
		{
			name: "Unknown hash not in hashlist",
			line: "someunknownhash:password",
			hashlistContent: []string{
				"differenthash",
			},
			expectedHash:  "",
			expectedPlain: "",
			shouldParse:   false,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			result := executor.parseCrackedHash(tt.line, tt.hashlistContent)

			if tt.shouldParse {
				if result == nil {
					t.Errorf("Expected to parse hash but got nil")
					return
				}

				if result.Hash != tt.expectedHash {
					t.Errorf("Hash mismatch: got %s, want %s", result.Hash, tt.expectedHash)
				}

				if result.Plain != tt.expectedPlain {
					t.Errorf("Plain mismatch: got %s, want %s", result.Plain, tt.expectedPlain)
				}
			} else {
				if result != nil {
					t.Errorf("Expected nil but got result: %+v", result)
				}
			}
		})
	}
}