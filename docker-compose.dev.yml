services:
  postgres:
    image: postgres:15-alpine
    container_name: krakenhashes-postgres-dev
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER:-krakenhashes}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-krakenhashes}
      - POSTGRES_DB=${DB_NAME:-krakenhashes}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-krakenhashes}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - krakenhashes-dev-net

  backend:
    image: golang:1.23.1-alpine
    container_name: krakenhashes-backend-dev
    working_dir: /app/backend
    command: sh -c "go install github.com/cosmtrek/air@latest && air -c .air.toml"
    volumes:
      - ./backend:/app/backend
      - ./versions.json:/app/versions.json:ro
      - go_mod_cache:/go/pkg/mod
      - ${KH_DATA_DIR_HOST:-./data}:/var/lib/krakenhashes
      - ${KH_CONFIG_DIR_HOST:-./config}:/etc/krakenhashes
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-krakenhashes}
      - DB_USER=${DB_USER:-krakenhashes}
      - DB_PASSWORD=${DB_PASSWORD:-krakenhashes}
      - JWT_SECRET=${JWT_SECRET:-dev_jwt_secret}
      - DEBUG=true
      - LOG_LEVEL=DEBUG
      - KH_HTTPS_PORT=31337
      - KH_HTTP_PORT=1337
      - CGO_ENABLED=0
      - GOOS=linux
    ports:
      - "31337:31337"
      - "1337:1337"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - krakenhashes-dev-net

  frontend:
    image: node:20-alpine
    container_name: krakenhashes-frontend-dev
    working_dir: /app/frontend
    command: sh -c "npm install && npm start"
    volumes:
      - ./frontend:/app/frontend
      - ./versions.json:/app/versions.json:ro
      - node_modules:/app/frontend/node_modules
    environment:
      - REACT_APP_API_URL=https://localhost:31337
      - REACT_APP_WS_URL=wss://localhost:31337
      - REACT_APP_DEBUG=true
      - WDS_SOCKET_PORT=3000
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    networks:
      - krakenhashes-dev-net

networks:
  krakenhashes-dev-net:
    driver: bridge

volumes:
  postgres_dev_data:
    name: krakenhashes_postgres_dev_data
  go_mod_cache:
    name: krakenhashes_go_mod_cache
  node_modules:
    name: krakenhashes_node_modules